-- Create messages table
CREATE TABLE messages (
    id SERIAL PRIMARY KEY,
    text VARCHAR(256) NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT NOW()
);

-- Create likes table
CREATE TABLE likes (
    id SERIAL PRIMARY KEY,
    message_id INTEGER REFERENCES messages(id),
    created_at TIMESTAMP NOT NULL DEFAULT NOW()
);

-- Create trigger to update message's likes count
CREATE OR REPLACE FUNCTION update_likes_count() RETURNS TRIGGER AS $$
BEGIN
    IF (TG_OP = 'INSERT') THEN
        UPDATE messages SET likes_count = likes_count + 1 WHERE id = NEW.message_id;
    ELSEIF (TG_OP = 'DELETE') THEN
        UPDATE messages SET likes_count = likes_count - 1 WHERE id = OLD.message_id;
    END IF;
    RETURN NULL;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER update_likes_count
AFTER INSERT OR DELETE ON likes
FOR EACH ROW
EXECUTE FUNCTION update_likes_count();
